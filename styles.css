body {
    font-family: Arial, sans-serif;
    background-color: black;
    color: #fff;
    text-align: center;
    margin: 0;
    padding: 0;
  }
  
  .container {
    padding: 50px;
  }
  
  input, button {
    padding: 10px;
    margin: 10px;
    border: none;
    border-radius: 5px;
  }
  
  input {
    .input {
        --icon-size: 28px;
        position: relative;
      }
      
      .input svg {
        position: absolute;
        width: var(--icon-size);
        top: 50%;
        left: 1rem;
        translate: 0 -50%;
        overflow: visible;
        color: color-mix(in lch, canvas, canvasText 30%);
      }
      
      .input svg path {
        transform-box: fill-box;
        transform-origin: center;
      }
      
      .input:is(:hover, :focus-within) .svg path {
        animation: pop 0.5s var(--d);
      }
      
      .input svg path:nth-of-type(1) {
        --d: 0.24s;
        --r: 20deg;
        --s: 1.5;
      }
      .input svg path:nth-of-type(2) {
        --d: 0.12s;
        --r: 10deg;
        --s: 1.4;
      }
      .input svg path:nth-of-type(3) {
        --d: 0s;
        --r: 0deg;
        --s: 1.25;
      }
      
      @keyframes pop {
        50% {
          scale: var(--s, 1);
          rotate: var(--r, 0deg);
        }
      }
      
      .search::placeholder {
        color: color-mix(in lch, canvas, canvasText 30%);
      }
      
      .search {
        box-shadow:
          0 20px 25px -5px rgb(0 0 0 / 0.15),
          0 8px 10px -6px rgb(0 0 0 / 0.25);
        font-family: inherit;
        min-width: 300px;
        padding: 1rem 1rem 1rem calc(1rem + var(--icon-size) + 0.5rem);
        font-size: 1.025rem;
        field-sizing: content;
        background:
          linear-gradient(canvas, canvas) padding-box,
          linear-gradient(120deg, hsl(278, 44%, 73%), hsl(35, 81%, 73%)) border-box;
        border: 4px solid transparent;
        border-radius: 12px;
        outline: none;
        /*   background-clip: padding-box, border-box; */
      }
      
      .bear-link {
        color: canvasText;
        position: fixed;
        top: 1rem;
        left: 1rem;
        width: 48px;
        aspect-ratio: 1;
        display: grid;
        place-items: center;
        opacity: 0.8;
      }
      
      :where(.x-link, .bear-link):is(:hover, :focus-visible) {
        opacity: 1;
      }
      
      .bear-link .svg {
        width: 75%;
      }
  }
  
  button {
    background-color: #0051ff;
    color: white;
    cursor: pointer;
  }
  
  button:hover {
    background-color: #002d99;
  }
  
  #results {
    margin-top: 20px;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    padding: 20px;
  }
  
  .card {
    position: relative;
    background-color: #1e1e1e;
    color: #fff;
    border-radius: 10px;
    padding: 20px;
    overflow: hidden;
    transition: transform 0.3s ease;
  }
  
  .card img {
    max-width: 100%;
    border-radius: 10px;
  }
  
  .card::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.5) 10%, transparent 70%);
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease, transform 0.3s ease;
  }
  
  .card:hover::before {
    opacity: 1;
    transform: rotate(45deg);
  }
  
  .card:hover {
    transform: scale(1.05);
  }
/* From Uiverse.io by Admin12121 */ 
.content {
  width: 300px;
  height: 300px;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}

.content .planet {
  width: 65%;
  height: 65%;
  background-color: #546c8c;
  border-radius: 100%;
  position: absolute;
  display: flex;
  align-items: center;
  transform-origin: center center;
  box-shadow: inset 2px -10px 0px rgba(0, 0, 0, 0.1);
  animation: planet 5s ease infinite alternate;
  /* planet ring */
  /* to cover the back of the ring */
  /* planet spots */
}

@keyframes planet {
  0% {
    transform: rotate(10deg);
  }

  100% {
    transform: rotate(-10deg);
  }
}

.content .planet .ring {
  position: absolute;
  width: 300px;
  height: 300px;
  border-radius: 100%;
  background-color: #bacbd9;
  display: flex;
  align-items: center;
  justify-content: center;
  transform-origin: 33% center;
  box-shadow: 2px -10px 0px rgba(0, 0, 0, 0.1), inset -5px -10px 0px rgba(0, 0, 0, 0.1);
  animation: ring 3s ease infinite;
  /* small ball */
  /* inner ring */
}

@keyframes ring {
  0% {
    transform: rotateX(110deg) rotateZ(0deg) translate(-50px, 5px);
  }

  100% {
    transform: rotateX(110deg) rotateZ(360deg) translate(-50px, 5px);
  }
}

.content .planet .ring:before {
  content: "";
  position: absolute;
  width: 10px;
  height: 30px;
  border-radius: 100%;
  background-color: #7ea1bf;
  z-index: 2;
  left: calc(0px - 5px);
  box-shadow: inset -3px 3px 0px rgba(0, 0, 0, 0.2);
}

.content .planet .ring:after {
  content: "";
  position: absolute;
  width: 240px;
  height: 240px;
  border-radius: 100%;
  background-color: #7ea1bf;
  box-shadow: inset 2px -10px 0px rgba(0, 0, 0, 0.1);
}

.content .planet .cover-ring {
  position: absolute;
  width: 100%;
  height: 50%;
  border-bottom-left-radius: 80%;
  border-bottom-right-radius: 80%;
  border-top-left-radius: 100px;
  border-top-right-radius: 100px;
  transform: translate(0px, -17px);
  background-color: #546c8c;
  z-index: 2;
  box-shadow: inset 0px -2px 0px rgba(0, 0, 0, 0.1);
}

.content .planet .spots {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  z-index: 2;
}

.content .planet .spots span {
  width: 30px;
  height: 30px;
  background-color: #3c4359;
  position: absolute;
  border-radius: 100%;
  box-shadow: inset -2px 3px 0px rgba(0, 0, 0, 0.3);
  animation: dots 5s ease infinite alternate;
}

@keyframes dots {
  0% {
    box-shadow: inset -3px 3px 0px rgba(0, 0, 0, 0.3);
  }

  100% {
    box-shadow: inset 3px 3px 0px rgba(0, 0, 0, 0.3);
  }
}

.content .planet .spots span:nth-child(1) {
  top: 20px;
  right: 50px;
}

.content .planet .spots span:nth-child(2) {
  top: 40px;
  left: 50px;
  width: 15px;
  height: 15px;
}

.content .planet .spots span:nth-child(3) {
  top: 80px;
  left: 20px;
  width: 25px;
  height: 25px;
}

.content .planet .spots span:nth-child(4) {
  top: 80px;
  left: 90px;
  width: 40px;
  height: 40px;
}

.content .planet .spots span:nth-child(5) {
  top: 160px;
  left: 70px;
  width: 15px;
  height: 15px;
}

.content .planet .spots span:nth-child(6) {
  top: 165px;
  left: 125px;
  width: 10px;
  height: 10px;
}

.content .planet .spots span:nth-child(7) {
  top: 90px;
  left: 150px;
  width: 15px;
  height: 15px;
}

.content p {
  color: #bacbd9;
  font-size: 14px;
  z-index: 2;
  position: absolute;
  bottom: -20px;
  font-family: "Roboto Mono", monospace;
  animation: text 4s ease infinite;
  width: 100px;
  text-align: center;
}

@keyframes text {
  0% {
    transform: translateX(-30px);
    letter-spacing: 0px;
    color: #bacbd9;
  }

  25% {
    letter-spacing: 3px;
    color: #7ea1bf;
  }

  50% {
    transform: translateX(30px);
    letter-spacing: 0px;
    color: #bacbd9;
  }

  75% {
    letter-spacing: 3px;
    color: #7ea1bf;
  }

  100% {
    transform: translateX(-30px);
    letter-spacing: 0px;
    color: #bacbd9;
  }
}
.loading {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    position: fixed; /* Fixa a animação no centro da tela */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* Centraliza exatamente no meio */
    z-index: 1000; /* Garante que fique acima de outros elementos */
  }
  
  .spinner {
    width: 50px;
    height: 50px;
    border: 5px solid rgba(255, 255, 255, 0.3);
    border-top: 5px solid #ffffff;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
  
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  
  .loading p {
    margin-top: 10px;
    color: #fff;
    font-size: 1.2em;
  }
  .background-stars {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
    top: 0;
    left: 0;
    z-index: -2; /* Mantém as estrelas ao fundo */
  }
  
  .star {
    position: absolute;
    width: 2px;
    height: 2px;
    background-color: white;
    border-radius: 50%;
    animation: twinkle 3s infinite ease-in-out;
  }
  
  /* Animação de brilho */
  @keyframes twinkle {
    0%, 100% {
      opacity: 0.5;
    }
    50% {
      opacity: 1;
    }
  }